name: Terraform Validate and Lint

on:
  pull_request:
    branches: [main] # Trigger on Pull Requests targeting the main branch
    paths:
      - "**/*.tf" # Only run if Terraform files change
      - "**/*.tfvars" # Or Terraform variable files change
      - ".github/workflows/tf-validate-lint.yml" # Or this workflow file changes
  push:
    branches: [main]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".github/workflows/tf-validate-lint.yml"

jobs:
  validate:
    name: Validate Terraform Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0
      - name: Show version
        run: tflint --version

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: false # Fail the workflow if formatting is incorrect

      - name: Initialize TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        id: lint
        run: tflint --recursive --format compact
        # Use --recursive to check all subdirectories
        # Use --format compact for cleaner output in logs
        continue-on-error: false # Fail the workflow on linting errors

      - name: Verify dev.auto.tfvars content
        run: |
          echo "Checking dev/dev.auto.tfvars for specific required values..."
          grep -F 'project             = "piksel"' dev/dev.auto.tfvars || (echo "Error: 'project = \"piksel\"' not found or changed in dev/dev.auto.tfvars"; exit 1)
          grep -F 'environment         = "dev"' dev/dev.auto.tfvars || (echo "Error: 'environment = \"dev\"' not found or changed in dev/dev.auto.tfvars"; exit 1)
          echo "Required values in dev/dev.auto.tfvars verified."

      # --- Validation per Environment ---
      # Note: These steps assume the directory structure exists.
      # If staging/prod directories don't exist yet, these specific steps might fail
      # until the directories are added with at least basic .tf files.
      - name: Terraform Init (Dev)
        id: init-dev
        run: cd dev && terraform init -backend=false
        # -backend=false prevents state locking/reading during validation

      - name: Terraform Validate (Dev)
        id: validate-dev
        run: cd dev && terraform validate

      # Add similar blocks for staging and prod once they are ready
